name: Build and Push

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    - cron: "30 12 * * 0" # Rebuild Weekly, 12:30 Sundays picked arbitrarily

permissions:
  contents: read
  packages: write

jobs:
  devcontainer:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: aws-localstack
            context: devcontainer/aws/localstack
            tag: latest
            args: |
              BASE_IMAGE=jammy
          - name: aws-localstack
            context: devcontainer/aws/localstack
            tag: 3.1.0-node16
            args: |
              NODE_MAJOR=16
              LOCALSTACK_MAJOR=3
              LOCALSTACK_MINOR=1
              LOCALSTACK_PATCH=0
              NPM_MAJOR=9
          - name: aws-localstack
            context: devcontainer/aws/localstack
            tag: 3.1.0-node18
            args: |
              NODE_MAJOR=18
              LOCALSTACK_MAJOR=3
              LOCALSTACK_MINOR=1
              LOCALSTACK_PATCH=0
          - name: aws-localstack
            context: devcontainer/aws/localstack
            tag: 3.1.0-node20
            args: |
              NODE_MAJOR=20
              LOCALSTACK_MAJOR=3
              LOCALSTACK_MINOR=1
              LOCALSTACK_PATCH=0
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.name }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}
          tags: |
            type=raw,value=${{ matrix.tag }},enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value=${{ matrix.tag }}-${{ github.sha }}
            type=raw,value=${{ matrix.tag }}-{{date 'YYYYMMDD'}},enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=schedule,pattern=${{ matrix.tag }}-{{date 'YYYYMMDD'}}
          labels: |
            maintainer=Scaffoldly <docker@scaffold.ly>
      - name: Build and push
        id: build-push
        uses: docker/build-push-action@v4
        with:
          file: ${{ matrix.context }}/Dockerfile
          context: ${{ matrix.context }}
          build-args: ${{ matrix.args }}
          platforms: linux/amd64,linux/arm64
          pull: true
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ runner.os }}-${{ matrix.name }}-${{ matrix.tag }}
          cache-to: type=gha,scope=${{ runner.os }}-${{ matrix.name }}-${{ matrix.tag }},mode=max

  runtime:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: nextjs
            context: runtime/nextjs
            tag: 14-node20
            args: |
              NODE_MAJOR=20
              NEXT_MAJOR=14
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Dockerhub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # GHCR
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ECR
      - name: Login to AWS
        uses: saml-to/assume-aws-role-action@v1
        with:
          role: arn:aws:iam::557208059266:role/docker@scaffold.ly
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get ECR Public Login
        id: ecr-public-login
        run: aws ecr-public get-login-password --region us-east-1

      - name: Login to Public ECR
        uses: docker/login-action@v2
        with:
          registry: public.ecr.aws
          username: AWS
          password: ${{ steps.ecr-public-login.outputs.stdout }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.name }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}
            public.ecr.aws/${{ github.repository_owner }}/${{ matrix.name }}
          tags: |
            type=raw,value=${{ matrix.tag }},enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value=${{ matrix.tag }}-${{ github.sha }}
            type=raw,value=${{ matrix.tag }}-{{date 'YYYYMMDD'}},enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=schedule,pattern=${{ matrix.tag }}-{{date 'YYYYMMDD'}}
          labels: |
            maintainer=Scaffoldly <docker@scaffold.ly>
      - name: Build and push
        id: build-push
        uses: docker/build-push-action@v4
        with:
          file: ${{ matrix.context }}/Dockerfile
          context: ${{ matrix.context }}
          build-args: ${{ matrix.args }}
          platforms: linux/amd64,linux/arm64
          pull: true
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ runner.os }}-${{ matrix.name }}-${{ matrix.tag }}
          cache-to: type=gha,scope=${{ runner.os }}-${{ matrix.name }}-${{ matrix.tag }},mode=max

  # awslambda-layer:
  #   needs: runtime
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       include:
  #         - name: nextjs
  #           tag: 14-node20
  #           platform: linux/amd64
  #         - name: nextjs
  #           tag: 14-node20
  #           platform: linux/arm64
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v2
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Login to AWS
  #       uses: saml-to/assume-aws-role-action@v1
  #       with:
  #         role: arn:aws:iam::557208059266:role/docker@scaffold.ly
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #     # TODO: Versioning?
  #     - name: Run build-and-publish script
  #       run: ./awslambda/layer/build-and-publish.sh ${{ matrix.name }} ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ matrix.tag }}-${{ github.sha }} ${{ matrix.platform }}
