name: Build and Push

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    - cron: "* 12 * * 0" # Rebuild Weekly, 12:30 Sundays picked arbitrarily

permissions:
  contents: read
  packages: write

jobs:
  composite:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: terraform-node
            context: composite/terraform/node
            args: |
              TERRAFORM_TAG=latest
              NODE_TAG=slim
          - name: terraform1.4.2-node16
            context: composite/terraform/node
            args: |
              TERRAFORM_TAG=1.4.2
              NODE_TAG=16-slim
          - name: terraform1.4.2-node18
            context: composite/terraform/node
            args: |
              TERRAFORM_TAG=1.4.2
              NODE_TAG=18-slim
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.name }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}
          tags: |
            type=sha
            type=raw,value={{date 'YYYYMMDD'}},enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=schedule,pattern={{date 'YYYYMMDD'}}
          labels: |
            maintainer=Scaffoldly <docker@scaffold.ly>
      - name: Build and push
        id: build-push
        uses: docker/build-push-action@v3
        with:
          file: ${{ matrix.context }}/Dockerfile
          context: ${{ matrix.context }}
          build-args: ${{ matrix.args }}
          platforms: linux/amd64,linux/arm64
          pull: true
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
